#!/usr/bin/env ruby

require 'optparse'
require 'dead_code'

options = {}

optparse = OptionParser.new do |opts|
  opts.banner = "Usage: dead_code [options] [root_path]\nroot path will default to '.'"
  
  opts.on('-c', '--class', "Find only unused classes") do
    options[:class] = true
  end
  
  opts.on('-f', '--function', "Find only unused functions") do
    options[:function] = true
  end
  
  opts.on('-m', '--module', "Find only unused modules") do
    options[:module] = true
  end
  
  opts.on('-r', '--rails', "Treat the project as a rails project") do
    options[:rails] = true
  end
  
  opts.on('-h', '--help', "Displays this screen") do
    puts opts
    exit
  end
end
optparse.parse!

path = ARGV[0] || "."

puts "========== CLASSES =========="
DeadClasses.find_dead_code(path, options[:rails]) unless options[:function] || options[:module]
puts "========= FUNCTIONS ========="
DeadFunctions.find_dead_code(path, options[:rails])unless options[:class] || options[:module]
puts "========== MODULES =========="
DeadModules.find_dead_code(path, options[:rails])unless options[:class] || options[:function]
